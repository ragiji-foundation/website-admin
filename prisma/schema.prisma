// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // Add direct URL if using connection pooling
  directUrl = env("DIRECT_URL")
}

model Enquiry {
  id        String   @id @default(cuid())
  email     String
  name      String?
  subject   String?
  message   String
  createdAt DateTime @default(now())
}

model Testimonial {
  id        Int      @id @default(autoincrement())
  name      String
  role      String
  content   String   @db.Text
  avatar    String?  @db.Text
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Blog {
  id              Int       @id @default(autoincrement())
  slug            String
  locale          String    // 'en' or 'hi'
  title           String
  content         String    @db.Text
  status          String    // 'draft', 'published', 'archived'
  authorName      String
  metaDescription String?   @db.Text
  ogTitle         String?
  ogDescription   String?   @db.Text
  authorId        Int
  author          User      @relation(fields: [authorId], references: [id])
  category        Category? @relation(fields: [categoryId], references: [id])
  categoryId      Int?
  tags            Tag[]     @relation("BlogToTag")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@unique([slug, locale])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  username  String   @unique
  password  String
  image     String?  @db.Text
  bio       String?  @db.Text
  role      String   @default("admin")
  blogs     Blog[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?  @db.Text
  blogs       Blog[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?  @db.Text
  blogs       Blog[]   @relation("BlogToTag")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ElectronicMedia {
  id          Int      @id @default(autoincrement())
  title       String
  description String?  @db.Text
  videoUrl    String
  thumbnail   String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model NewsArticle {
  id          Int      @id @default(autoincrement())
  title       String
  source      String
  date        DateTime
  imageUrl    String?
  link        String?
  description String?  @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Initiative {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  imageUrl    String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Center {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  description String   @db.Text
  imageUrl    String?
  contactInfo String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Career {
  id           Int      @id @default(autoincrement())
  title        String
  location     String
  type         String
  description  String   @db.Text
  requirements String   @db.Text
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Gallery {
  id          Int      @id @default(autoincrement())
  title       String
  description String?  @db.Text
  imageUrl    String
  category    String   // Event, Center, Initiative etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Settings {
  id              Int      @id @default(1)
  siteName        String   @default("CMS")
  siteDescription String   @default("Content Management System")
  primaryColor    String   @default("#228BE6")
  logoUrl         String?
  contactEmail    String
  socialLinks     Json     @default("{\"twitter\":\"\",\"facebook\":\"\",\"instagram\":\"\"}")
  maintenance     Boolean  @default(false)
  updatedAt       DateTime @updatedAt
}

model Carousel {
  id        Int      @id @default(autoincrement())
  title     String
  imageUrl  String?
  link      String?  @default("#")
  active    Boolean  @default(true)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("carousel")
}

model JoinApplication {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  role      String
  message   String   @db.Text
  status    String   @default("PENDING") // PENDING, APPROVED, REJECTED
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("join_applications")
}



