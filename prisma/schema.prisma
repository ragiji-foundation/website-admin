generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [pg_trgm]
}

model Enquiry {
  id        String   @id @default(cuid())
  email     String
  name      String?
  subject   String?
  message   String
  createdAt DateTime @default(now())
}

model Testimonial {
  id          Int      @id @default(autoincrement())
  name        String
  role        String
  content     String
  avatar      String?
  createdAt   DateTime @default(now())
  isPublished Boolean  @default(false)
}

model Blog {
  id              Int       @id @default(autoincrement())
  slug            String
  locale          String
  title           String
  content         String
  status          String
  authorName      String
  metaDescription String?
  ogTitle         String?
  ogDescription   String?
  authorId        Int
  categoryId      Int?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  author          User      @relation(fields: [authorId], references: [id])
  category        Category? @relation(fields: [categoryId], references: [id])
  tags            Tag[]     @relation("BlogToTag")

  @@unique([slug, locale])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  username  String   @unique
  password  String
  image     String?
  bio       String?
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]

  @@map("users")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  blogs       Blog[]
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  blogs       Blog[]   @relation("BlogToTag")
}

model ElectronicMedia {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  videoUrl    String
  thumbnail   String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model NewsArticle {
  id          Int      @id @default(autoincrement())
  title       String
  source      String
  date        DateTime
  imageUrl    String?
  link        String?
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Initiative {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  imageUrl    String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Center {
  id          Int      @id @default(autoincrement())
  name        String
  location    String
  description String
  imageUrl    String?
  contactInfo String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Career {
  id           Int      @id @default(autoincrement())
  title        String
  slug         String   @unique
  location     String
  type         String
  description  String
  requirements String
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Gallery {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  imageUrl    String
  category    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Settings {
  id              Int      @id @default(1)
  siteName        String   @default("CMS")
  siteDescription String   @default("Content Management System")
  primaryColor    String   @default("#228BE6")
  logoUrl         String?
  contactEmail    String
  socialLinks     Json     @default("{\"twitter\": \"\", \"facebook\": \"\", \"instagram\": \"\"}")
  maintenance     Boolean  @default(false)
  updatedAt       DateTime @updatedAt
}

model Carousel {
  id        Int      @id @default(autoincrement())
  title     String
  imageUrl  String?
  link      String?  @default("#")
  active    Boolean  @default(true)
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("carousel")
}

model JoinApplication {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  role      String
  message   String
  status    String   @default("PENDING")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("joinApplication")
}

model Banner {
  id              String   @id @default(cuid())
  type            String
  title           String
  description     String?
  backgroundImage String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  @@map("banners")
}

model Award {
  id           String   @id @default(cuid())
  title        String
  year         String
  description  String
  imageUrl     String
  organization String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("awards")
}

model Feature {
  id          String   @id @default(cuid())
  title       String
  description String
  mediaType   String
  mediaUrl    String
  thumbnail   String?
  order       Int      @default(0)
  section     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("features")
}

model FeatureSection {
  id         String   @id @default(cuid())
  identifier String   @unique
  heading    String
  ctaText    String
  ctaUrl     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@map("feature_sections")
}

model SuccessStory {
  id         String   @id @default(cuid())
  slug       String   @unique
  title      String
  content    Json
  personName String
  location   String
  imageUrl   String?
  featured   Boolean  @default(false)
  order      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("success_stories")
}

model Stat {
  id        String   @id @default(cuid())
  label     String
  value     String
  icon      String?
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("stats")
}

model TheNeed {
  id            String   @id @default(cuid())
  mainText      String
  statistics    String
  impact        String
  imageUrl      String
  statsImageUrl String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  isPublished   Boolean  @default(false)
  version       Int      @default(1)
}

model OurStory {
  id        String   @id @default(cuid())
  title     String
  content   String
  media     Json
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  version   Int      @default(1)
}

model OurModel {
  id          String   @id @default(cuid())
  description String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VisionMission {
  id          String   @id @default(cuid())
  vision      String
  mission     String
  visionIcon  String
  missionIcon String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Timeline {
  id         String   @id @default(cuid())
  year       String
  title      String
  centers    Int
  volunteers Int
  children   Int
  order      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
