generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  directUrl  = env("DIRECT_URL")
  extensions = [pg_trgm]
}

model Enquiry {
  id        String   @id @default(cuid())
  email     String
  name      String?
  subject   String?
  message   String
  createdAt DateTime @default(now())
}

model Testimonial {
  id          Int      @id @default(autoincrement())
  name        String
  nameHi      String?
  role        String
  roleHi      String?
  content     String
  contentHi   String?
  avatar      String?
  createdAt   DateTime @default(now())
  isPublished Boolean  @default(false)
}

model Blog {
  id              Int       @id @default(autoincrement())
  slug            String
  locale          String
  title           String
  titleHi         String?
  content         String
  contentHi       String?
  status          String
  authorName      String
  authorNameHi    String?
  metaDescription String?
  metaDescriptionHi String?
  ogTitle         String?
  ogTitleHi       String?
  ogDescription   String?
  ogDescriptionHi String?
  featuredImage   String?
  authorId        Int
  categoryId      Int?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  author          User      @relation(fields: [authorId], references: [id])
  category        Category? @relation(fields: [categoryId], references: [id])
  tags            Tag[]     @relation("BlogToTag")

  @@unique([slug, locale])
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  username  String   @unique
  password  String
  image     String?
  bio       String?
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]

  @@map("users")
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  nameHi      String?
  slug        String   @unique
  description String?
  descriptionHi String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  blogs       Blog[]
}

model Tag {
  id          Int      @id @default(autoincrement())
  name        String
  nameHi      String?
  slug        String   @unique
  description String?
  descriptionHi String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  blogs       Blog[]   @relation("BlogToTag")
}

model ElectronicMedia {
  id          Int      @id @default(autoincrement())
  title       String
  titleHi     String?
  description String?
  descriptionHi String?
  videoUrl    String
  thumbnail   String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model NewsArticle {
  id          Int      @id @default(autoincrement())
  title       String
  titleHi     String?
  source      String
  date        DateTime
  imageUrl    String?
  link        String?
  description String?
  descriptionHi String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Initiative {
  id          Int      @id @default(autoincrement())
  title       String
  titleHi     String?
  description String
  descriptionHi String?
  imageUrl    String?
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Center {
  id          Int      @id @default(autoincrement())
  name        String
  nameHi      String?
  location    String
  locationHi  String?
  description String
  descriptionHi String?
  imageUrl    String?
  contactInfo String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Career {
  id           Int      @id @default(autoincrement())
  title        String
  titleHi      String?
  slug         String   @unique
  location     String
  locationHi   String?
  type         String
  typeHi       String?
  description  String
  descriptionHi String?
  requirements String
  requirementsHi String?
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Gallery {
  id          Int      @id @default(autoincrement())
  title       String
  titleHi     String?
  description String?
  descriptionHi String?
  imageUrl    String
  category    String
  categoryHi  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Settings {
  id              Int      @id @default(1)
  siteName        String   @default("CMS")
  siteDescription String   @default("Content Management System")
  primaryColor    String   @default("#228BE6")
  logoUrl         String?
  contactEmail    String
  socialLinks     Json     @default("{\"twitter\": \"\", \"facebook\": \"\", \"instagram\": \"\"}")
  maintenance     Boolean  @default(false)
  updatedAt       DateTime @updatedAt
}

model Carousel {
  id          Int      @id @default(autoincrement())
  title       String
  titleHi     String?
  type        String   @default("image")
  imageUrl    String?
  videoUrl    String?
  link        String?
  active      Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("carousel")
}

model JoinApplication {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String
  role      String
  message   String
  status    String   @default("PENDING")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("joinApplication")
}

model Banner {
  id              String   @id @default(cuid())
  type            String
  title           String
  titleHi         String?
  description     String?
  descriptionHi   String?
  backgroundImage String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())

  @@map("banners")
}

model Award {
  id           String   @id @default(cuid())
  title        String
  titleHi      String?
  year         String
  description  String
  descriptionHi String?
  imageUrl     String
  organization String
  organizationHi String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("awards")
}

model Feature {
  id          String   @id @default(cuid())
  title       String
  titleHi     String?
  description String
  descriptionHi String?
  mediaType   String
  mediaUrl    String
  thumbnail   String?
  order       Int      @default(0)
  section     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())

  @@map("features")
}

model FeatureSection {
  id         String   @id @default(cuid())
  identifier String   @unique
  heading    String
  headingHi  String?
  ctaText    String
  ctaTextHi  String?
  ctaUrl     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  @@map("feature_sections")
}

model SuccessStory {
  id         String   @id @default(cuid())
  slug       String   @unique
  title      String
  titleHi    String?
  content    String
  contentHi  String?
  personName String
  personNameHi String?
  location   String
  locationHi String?
  imageUrl   String?
  featured   Boolean  @default(false)
  order      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("success_stories")
}

model Stat {
  id        String   @id @default(cuid())
  label     String
  labelHi   String?
  value     String
  icon      String?
  order     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@map("stats")
}

model TheNeed {
  id            String   @id @default(cuid())
  mainText      String
  mainTextHi    String?
  statistics    String
  statisticsHi  String?
  impact        String
  impactHi      String?
  imageUrl      String
  statsImageUrl String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  isPublished   Boolean  @default(false)
  version       Int      @default(1)
}

model OurStory {
  id        String   @id @default(cuid())
  title     String
  titleHi   String?
  content   String
  contentHi String?
  media     Json
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  version   Int      @default(1)
}

model OurModel {
  id          String   @id @default(cuid())
  description String
  descriptionHi String?
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model VisionMission {
  id          String   @id @default(cuid())
  vision      String
  visionHi    String?
  mission     String
  missionHi   String?
  visionIcon  String
  missionIcon String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
}

model Timeline {
  id         String   @id @default(cuid())
  year       String
  title      String
  titleHi    String?
  centers    Int
  volunteers Int
  children   Int
  order      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
}

// Analytics models
model PageView {
  id        Int      @id @default(autoincrement())
  path      String
  referrer  String?
  userAgent String?
  ipAddress String?
  sessionId String
  timestamp DateTime @default(now())
  visitorId String

  @@index([path])
  @@index([timestamp])
  @@index([visitorId])
  @@index([sessionId])
}

model Visitor {
  id              String   @id
  firstVisit      DateTime @default(now())
  lastVisit       DateTime @default(now())
  visitCount      Int      @default(1)
  country         String?
  city            String?
  device          String?
  browser         String?
  operatingSystem String?
}

model Event {
  id        Int      @id @default(autoincrement())
  name      String
  data      Json?    @default("{}")
  path      String?
  visitorId String
  sessionId String
  timestamp DateTime @default(now())

  @@index([name])
  @@index([timestamp])
  @@index([visitorId])
  @@index([sessionId])
}

// Translation management models
model Translation {
  id        String   @id @default(cuid())
  key       String
  valueEn   String
  valueHi   String?
  category  String   @default("general")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([key, category])
  @@map("translations")
}

model MenuItem {
  id          String   @id @default(cuid())
  label       String
  labelHi     String?
  href        String
  order       Int      @default(0)
  parentId    String?
  isActive    Boolean  @default(true)
  parent      MenuItem? @relation("MenuHierarchy", fields: [parentId], references: [id])
  children    MenuItem[] @relation("MenuHierarchy")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("menu_items")
}

model PageContent {
  id         String   @id @default(cuid())
  pageType   String   // "homepage", "about", "contact", etc.
  section    String   // "hero", "features", "testimonials", etc.
  fieldKey   String   // "title", "description", "button_text", etc.
  valueEn    String
  valueHi    String?
  mediaUrl   String?
  order      Int      @default(0)
  isActive   Boolean  @default(true)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([pageType, section, fieldKey])
  @@map("page_content")
}

model MinioFile {
  id           String   @id @default(cuid())
  bucketName   String
  objectName   String
  originalName String?
  url          String
  contentType  String?
  size         BigInt?
  etag         String?
  lastModified DateTime?
  referencedBy String?  // Which table/entity uses this file
  referenceId  String?  // The ID of the entity that uses this file
  hasReference Boolean  @default(false) // Whether this file is referenced by any entity
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([bucketName, objectName])
  @@map("minio_files")
}

